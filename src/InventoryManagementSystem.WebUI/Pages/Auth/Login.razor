@using Microsoft.AspNetCore.Components;
@using InventoryManagementSystem.WebUI.Entities.DTO;
@inject InventoryManagementSystem.WebUI.Services.IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@page "/login";

<div class="flex flex-col overflow-y-auto md:flex-row">
  <div class="h-32 md:h-auto md:w-1/2">
    <img
      aria-hidden="true"
      class="object-cover w-full h-full dark:hidden"
      src="/images/login-office.jpeg"
      alt="Office"
    />
    <img
      aria-hidden="true"
      class="hidden object-cover w-full h-full dark:block"
      src="/images/login-office-dark.jpeg"
      alt="Office"
    />
  </div>
  <div class="flex items-center justify-center p-6 sm:p-12 md:w-1/2">
    <EditForm Model="_userForAuthentication" OnValidSubmit="ExecuteLogin" class="w-full">
      <DataAnnotationsValidator />
      <h1
        class="mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200"
      >
        Login
      </h1>
      @if (ShowAuthError)
      {
          <div class="alert alert-danger" role="alert">
              <p>@Error</p>
          </div>
      }
      <label class="block text-sm">
        <span class="text-gray-700 dark:text-gray-400">Email</span>
        <InputText @bind-Value="_userForAuthentication.Email"
          class="block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input"
          placeholder="Enter email address"
        />
        <ValidationMessage For="@(() => _userForAuthentication.Email)" />
      </label>
      <label class="block mt-4 text-sm">
        <span class="text-gray-700 dark:text-gray-400">Password</span>
        <InputText @bind-Value="_userForAuthentication.Password"
          class="block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input"
          placeholder="***************"
          type="password"
        />
        <ValidationMessage For="@(() => _userForAuthentication.Password)" />
      </label>

      <!-- You should use a button here, as the anchor is only used for the example  -->
      <button
        type="submit"
        class="block w-full px-4 py-2 mt-4 text-sm font-medium leading-5 text-center text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple"
      >
        Log in
      </button>

      <hr class="my-8" />

      <p class="mt-4">
        <a
          class="text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline"
          href="./forgot-password.html"
        >
          Forgot your password?
        </a>
      </p>
      <p class="mt-1">
        <a
          class="text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline"
          href="./create-account.html"
        >
          Create account
        </a>
      </p>
    </EditForm>
  </div>
</div>

@code {
    private UserForAuthenticationDto _userForAuthentication = new UserForAuthenticationDto();
    public bool ShowAuthError { get; set; }
    public string Error { get; set; }

    public async Task ExecuteLogin()
    {
        ShowAuthError = false;

        var result = await AuthenticationService.Login(_userForAuthentication);
        if (!result.IsAuthSuccessful)
        {
            Error = result.ErrorMessage;
            ShowAuthError = true;
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}